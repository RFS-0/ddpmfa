# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-30 13:07
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Compartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='compartment', max_length=250, verbose_name='compartment: ')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='time of creation of the compartment')),
                ('compNumber', models.BigIntegerField(verbose_name='number of the compartment')),
                ('logInflows', models.BooleanField(default=True, verbose_name='log inflows to this compartment')),
                ('category', models.CharField(max_length=250, verbose_name='category of the compartment')),
            ],
        ),
        migrations.CreateModel(
            name='ExternalInflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='External Inflow', max_length=250, verbose_name=' external inflow: ')),
                ('startDelay', models.SmallIntegerField(verbose_name='delay time in periods before release starts')),
                ('derivationDistribution', models.CharField(max_length=250, verbose_name='probability density function probability distribution function (e.g. from scipy.stats) to sample random values for the transfer coefficient')),
                ('derivationParameters', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)], verbose_name='parameter list of the probability distribution function')),
                ('derivationFactor', models.FloatField(verbose_name='deterministic value for the transfer coefficient')),
            ],
        ),
        migrations.CreateModel(
            name='FixedRateRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='local release', max_length=250, verbose_name='local release: ')),
                ('releaseList', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)], verbose_name='a list of with a release for each period')),
                ('delay', models.SmallIntegerField(verbose_name='delay time in periods before release starts')),
                ('releaseRate', models.FloatField(verbose_name='periodic release rate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FunctionRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='local release', max_length=250, verbose_name='local release: ')),
                ('releaseList', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)], verbose_name='a list of with a release for each period')),
                ('delay', models.SmallIntegerField(verbose_name='delay time in periods before release starts')),
                ('releaseFunction', models.CharField(max_length=250, verbose_name='probability density function probability distribution function (e.g. from scipy.stats) to sample random values for the transfer coefficient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ListRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='local release', max_length=250, verbose_name='local release: ')),
                ('releaseList', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)], verbose_name='a list of with a release for each period')),
                ('delay', models.SmallIntegerField(verbose_name='delay time in periods before release starts')),
                ('releaseRateList', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)], verbose_name='list of release rates of a stored material in future periods')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name of the model', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='transfer', max_length=250, verbose_name='transfer: ')),
                ('priority', models.SmallIntegerField(verbose_name='priority of the transfer')),
                ('currentTC', models.FloatField(verbose_name='current transfer coefficient')),
            ],
        ),
        migrations.CreateModel(
            name='AggregatedTransfer',
            fields=[
                ('transfer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.Transfer')),
                ('name_of_aggregated_transfer', models.CharField(default='aggregated transfer', max_length=250, verbose_name='aggregated transfer: ')),
                ('weights', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)], verbose_name='a given sample of values from which is randomly drawn')),
            ],
            bases=('dpmfa.transfer',),
        ),
        migrations.CreateModel(
            name='ConstantTransfer',
            fields=[
                ('transfer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.Transfer')),
                ('name_of_constant_transfer', models.CharField(default='constant transfer', max_length=250, verbose_name='constant transfer: ')),
                ('value', models.FloatField(verbose_name='deterministic value for the transfer coefficient')),
            ],
            bases=('dpmfa.transfer',),
        ),
        migrations.CreateModel(
            name='ExternalFunctionInflow',
            fields=[
                ('externalinflow_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.ExternalInflow')),
                ('name_of_external_function_inflow', models.CharField(default='external function inflow', max_length=250, verbose_name='name of external function inflow')),
                ('inflowFunction', models.CharField(max_length=250, verbose_name='probability density function probability distribution function (e.g. from scipy.stats) to sample random values for the transfer coefficient')),
            ],
            bases=('dpmfa.externalinflow',),
        ),
        migrations.CreateModel(
            name='ExternalListInflow',
            fields=[
                ('externalinflow_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.ExternalInflow')),
                ('name_of_external_list_inflow', models.CharField(default='external list inflow', max_length=250, verbose_name='name of the external list inflow')),
            ],
            bases=('dpmfa.externalinflow',),
        ),
        migrations.CreateModel(
            name='FlowCompartment',
            fields=[
                ('compartment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.Compartment')),
                ('name_of_flow_compartment', models.CharField(default='flow compartment', max_length=250, verbose_name='flow compartment')),
                ('adjustOutgoingTCs', models.BooleanField(default=True, verbose_name='adjust outgoing TCs of this compartment')),
                ('logOutflows', models.BooleanField(default=True, verbose_name='log outflows from this compartment')),
                ('immediateReleaseRate', models.FloatField(default=0.0, verbose_name='the immediate release rate of this compartment')),
            ],
            bases=('dpmfa.compartment',),
        ),
        migrations.CreateModel(
            name='RandomChoiceTransfer',
            fields=[
                ('transfer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.Transfer')),
                ('name_of_random_choice_transfer', models.CharField(default='random choice transfer', max_length=250, verbose_name='random choice transfer: ')),
                ('sample', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)], verbose_name='a given sample of values from which is randomly drawn')),
            ],
            bases=('dpmfa.transfer',),
        ),
        migrations.CreateModel(
            name='StochasticTransfer',
            fields=[
                ('transfer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.Transfer')),
                ('name_of_stochastic_transfer', models.CharField(default='stochastic transfer', max_length=250, verbose_name='stochastic transfer: ')),
                ('parameters', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)], verbose_name='parameter list of the probability distribution function')),
                ('fucntion', models.CharField(max_length=250, verbose_name='probability density function probability distribution function (e.g. from scipy.stats) to sample random values for the transfer coefficient')),
            ],
            bases=('dpmfa.transfer',),
        ),
        migrations.AddField(
            model_name='transfer',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpmfa.Compartment'),
        ),
        migrations.AddField(
            model_name='model',
            name='compartment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpmfa.Compartment'),
        ),
        migrations.AddField(
            model_name='model',
            name='inflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpmfa.ExternalInflow'),
        ),
        migrations.AddField(
            model_name='externalinflow',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpmfa.Compartment'),
        ),
        migrations.CreateModel(
            name='SinglePeriodInflow',
            fields=[
                ('externallistinflow_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.ExternalListInflow')),
                ('currentValue', models.BigIntegerField(verbose_name='current inflow value')),
            ],
            bases=('dpmfa.externallistinflow',),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('flowcompartment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.FlowCompartment')),
                ('name_of_stock', models.CharField(default='stock', max_length=250, verbose_name='stock')),
            ],
            bases=('dpmfa.flowcompartment',),
        ),
        migrations.AddField(
            model_name='aggregatedtransfer',
            name='singleTransfers',
            field=models.ForeignKey(max_length=250, on_delete=django.db.models.deletion.CASCADE, related_name='Transfer', to='dpmfa.Transfer', verbose_name='a list of SochasticTransfers and/or RandomChoiceTransfers to be considered in the combined distribution'),
        ),
        migrations.CreateModel(
            name='FixedValueInflow',
            fields=[
                ('singleperiodinflow_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.SinglePeriodInflow')),
                ('value', models.FloatField(verbose_name='the inflow value')),
            ],
            bases=('dpmfa.singleperiodinflow',),
        ),
        migrations.CreateModel(
            name='RandomChoiceInflow',
            fields=[
                ('singleperiodinflow_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.SinglePeriodInflow')),
                ('name_of_random_choice_inflow', models.CharField(default='random choice inflow', max_length=250, verbose_name='random choice inflow')),
                ('sample', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)], verbose_name='a given sample of values from which is randomly drawn')),
            ],
            bases=('dpmfa.singleperiodinflow',),
        ),
        migrations.CreateModel(
            name='StochasticInflow',
            fields=[
                ('singleperiodinflow_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpmfa.SinglePeriodInflow')),
                ('name_of_stochastic_inflow', models.CharField(default='stochastic inflow', max_length=250, verbose_name='stochastic inflow')),
            ],
            bases=('dpmfa.singleperiodinflow',),
        ),
        migrations.AddField(
            model_name='externallistinflow',
            name='valueList',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpmfa.SinglePeriodInflow', verbose_name='name of the single period inflow'),
        ),
        migrations.AddField(
            model_name='externalfunctioninflow',
            name='basicInflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpmfa.SinglePeriodInflow', verbose_name='name of the single period inflow'),
        ),
    ]
